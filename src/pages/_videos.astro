---
import '../styles/pages/videos.scss'

import Layout from '../layouts/Layout.astro'

import SiteGridContent from '../components/siteGridContent.astro'

import Script from '../utils/script.astro'
import { isRenderTemplateResult } from 'astro/runtime/server/render/astro/render-template.js'

const cids = [
    'UCzhr23vdbi63nZGYqBM7Ofw', 
    'UCb35v6VAVFI8Q0aIpwPoW1g', 
    'UCLK0Lj3V864AbKfutfyztYA', 
    'UC8cV2cdrp1ccBWzoi1R-UwQ', 
    'UCHUWd3IuPu3P21XkDW8vSuQ', 
]

var vids = []

let vidsNum = 9
let csAmt = cids.length
let vidsPerChannel = Math.ceil(vidsNum/csAmt)

cids.forEach(async (cid, cI) => {
    let channelURL = encodeURIComponent(`https://www.youtube.com/feeds/videos.xml?channel_id=${cid}`)
    let reqURL = `https://api.rss2json.com/v1/api.json?rss_url=${channelURL}`
    
    await fetch(reqURL)
        .then(response => response.json())
        .then(result => {
            if (!!result.items) {
                let channelVids = result.items.length
                if (channelVids < 1) {
                    csAmt--
                    cids.splice(cI, 1)
                    vidsPerChannel = Math.ceil(vidsNum/csAmt)
                }
            }
        })
        .catch(error => console.log('error', error))
})


cids.forEach(async (cid, cI) => {
    let channelURL = encodeURIComponent(`https://www.youtube.com/feeds/videos.xml?channel_id=${cid}`)
    let reqURL = `https://api.rss2json.com/v1/api.json?rss_url=${channelURL}`
    
    await fetch(reqURL)
        .then(response => response.json())
        .then(result => {
            if (result) {
                if (result.status) {
                    if (result.status === 'ok') {
                        handleVideos(result)
                    }
                }
            }
        })
        .catch(error => console.log('error', error));
})

function handleVideos(channel) {
    // console.log(channel)
    if (channel.items) {
        if (channel.items.length > 0) {
            channel.items.map((item, i) => {
                if (i+1 <= vidsPerChannel) {
                    vids.push(item)
                }
            })
        }
    }
}
console.log(vids)
---
<Layout title="Videos">
    <SiteGridContent id="videos">
        {
            vids.map((vid, i) => {
                return <pre>{JSON.stringify(vid, null, 4)}</pre>

                // var player = document.createElement('div')
                // player.id = `player${(i+1)}`
                // vElement.appendChild(player)
            })
        }
    </SiteGridContent>
</Layout>